searchState.loadedDescShard("ext_proc", 0, "CalloutServer Module\nAddresses specify either a logical or physical address and …\nAsync data source which support async data fetch.\nConfiguration defining a jittered exponential back off …\n[#next-free-field: 7]\nBuildVersion combines SemVer version of extension with …\nCidrRange specifies an IP Address and a prefix length to …\nIdentifies a specific ControlPlane instance that Envoy is …\nData source consisting of a file, an inline value, or an …\nThe address represents an envoy internal listener. …\nVersion and identification for an Envoy extension. …\nWrapper for a set of headers.\nHeader name/value pair.\nHeader name/value pair plus option to control append …\nEnvoy external URI descriptor\nThe transport is used for incoming traffic.\nPlease use :ref:…\nKey/value pair plus option to control append behavior. …\nKey/value pair to append or remove.\nIdentifies location of where either Envoy runs or where …\nMetadata provides additional inputs to filters based on …\nIdentifies a specific Envoy instance. The node identifier …\nThe transport is used for outgoing traffic.\nQuery parameter name/value pair.\nThe message specifies how to fetch data from remote and …\nHTTP request method.\nThe message specifies the retry policy of remote data …\nEnvoy supports :ref:…\nRuntime derived double with a default when not specified.\nRuntime derived bool with a default when not specified.\nRuntime derived FractionalPercent with defaults for when …\nRuntime derived percentage with a default when not …\nRuntime derived uint32 with a default when not specified.\n[#next-free-field: 7]\nGeneric socket option message. This would be used to set …\nIdentifies the direction of the traffic relative to the …\nConfiguration for transport socket in :ref:…\nMessage type for extension configuration. …\nDefault option is unspecified.\nA directory that is watched for changes, e.g. by inotify …\nReturns the enum value of <code>action</code>, or the default if the …\nDescribes the action taken to append/overwrite the given …\nDeprecated by :ref:…\nNested message and enum types in <code>Address</code>.\nThe address for this socket. :ref:…\nThe additional address to bind.\nIPv4 or IPv6 address, e.g. <code>192.0.0.0</code> or <code>2001:db8::</code>.\nKey/value pair to append or overwrite. Only one of <code>append</code> …\nShould the value be appended? If true (default), the value …\nReturns the enum value of <code>append_action</code>, or the default if …\nDescribes the action taken to append/overwrite the given …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nNested message and enum types in <code>AsyncDataSource</code>.\nThe base interval to be used for the next back off …\nCategory of the extension. Extension category names use …\nClient feature support list. These are well known features …\nDefines the local service cluster name where Envoy is …\nImplementation specific configuration which depends on the …\nNested message and enum types in <code>DataSource</code>.\nDefault value if runtime value is not available.\nDefault value if runtime value is not available.\nDefault value if runtime value is not available.\nDefault value if runtime value is not available.\nDefault value if the runtime value’s for the …\nAn optional name to give this socket option for debugging, …\nIndicates that the extension is present but was disabled …\nMap from xDS resource type URL to dynamic context …\nSpecifies an endpoint identifier to distinguish between …\nKey/value pair entry that this option to append or …\nNested message and enum types in <code>EnvoyInternalAddress</code>.\nList of extensions and their versions supported by the …\nExtra source addresses appended to the address specified …\nKey is the reverse DNS filter name, e.g. com.acme.widget. …\nWhether to set the <code>IP_FREEBIND</code> option when creating the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>RoutingPriority</code>, or <code>None</code> if <code>value</code> is …\nConverts an <code>i32</code> to a <code>RequestMethod</code>, or <code>None</code> if <code>value</code> is …\nConverts an <code>i32</code> to a <code>TrafficDirection</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nHeader name/value pair that this option applies to.\nNested message and enum types in <code>HeaderValueOption</code>.\nA list of header names and their values.\nFor details, see :ref:…\nSpecify how <code>uri</code> is to be fetched. Today, this requires an …\nNested message and enum types in <code>HttpUri</code>.\nThe HTTP URI to fetch the remote data.\nAn opaque node identifier for the Envoy node. This also …\nAn opaque control plane identifier that uniquely …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhen binding to an IPv6 address above, this enables …\nReturns <code>true</code> if <code>value</code> is a variant of <code>RoutingPriority</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>RequestMethod</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>TrafficDirection</code>.\nIs the header value allowed to be empty? If false …\nThe number of seconds between keep-alive probes. Default …\nMaximum number of keepalive probes to send without …\nThe number of seconds a connection needs to be idle before …\nThe key of the key/value pair.\nThe key of the key/value pair.\nThe key of the query parameter. Case sensitive.\nHeader name.\nNested message and enum types in <code>KeyValueAppend</code>.\nCorresponding to the level value passed to setsockopt, …\nKnown listening ports on the node as a generic hint to the …\nCustom local address selector to override the default (i.e.\nLocality specifying where the Envoy instance is running.\nSpecifies the maximum interval between retries. This …\nFree-form build information. Envoy defines several well …\nOpaque metadata extending the node identifier. Envoy will …\nThe mode for the Pipe. Not applicable for abstract sockets.\nThe name of an extension. This is not used to select the …\nThe numeric name as passed to setsockopt\nThis is the name of the Envoy filter as specified in the …\nThe name of the transport socket to instantiate. The name …\nNested message and enum types in <code>Node</code>.\nSpecifies the allowed number of retries. This parameter is …\nUnix Domain Socket path. On Linux, paths starting with ‘@…\nDirectory path to watch.\nLength of prefix, e.g. 0, 32. Defaults to 0 when unset.\nReturns the enum value of <code>protocol</code>, or the default if the …\nHeader value is encoded as bytes which can support …\nThe single key/value pair record to be appended or …\nRegion this :ref:…\nKey to remove. Only one of <code>append</code> or <code>remove</code> can be set or …\nThe name of the custom resolver. This must have been …\nSpecifies parameters that control :ref:…\nFor details, see :ref:…\nFor details, see :ref:…\nNested message and enum types in <code>RetryPolicy</code>.\nRetry policy for fetching remote data.\nFor details, see :ref:…\nRuntime key to get value for comparison. This value is …\nRuntime key to get value for comparison. This value is …\nRuntime key to get value for comparison. This value is …\nRuntime key to get value for comparison. This value is …\nRuntime key for a YAML representation of a …\nSets <code>action</code> to the provided enum value.\nSets <code>append_action</code> to the provided enum value.\nSets <code>protocol</code> to the provided enum value.\nSets <code>state</code> to the provided enum value.\nSHA256 string for verifying data.\nNested message and enum types in <code>SocketAddress</code>.\nNested message and enum types in <code>SocketOption</code>.\nAdditional socket options that may not be present in Envoy …\nAdditional socket options that may not be present in Envoy …\nThe address to bind to when creating a socket.\nReturns the enum value of <code>state</code>, or the default if the …\nThe state in which the option will be applied. When used …\nWhen used for locality of upstream hosts, this field …\nSets the maximum duration in milliseconds that a response …\nNested message and enum types in <code>TransportSocket</code>.\nApply the socket option to the specified …\n[#not-implemented-hide:] Type descriptor of extension …\nType URLs of extension configuration protos.\nThe typed config for the extension. The type URL will be …\nKey is the reverse DNS filter name, e.g. com.acme.widget. …\nThe HTTP server URI. It should be a full FQDN with …\nFree-form string that identifies the entity requesting …\nThe value of the key/value pair.\nThe value of the key/value pair.\nThe value of the query parameter.\nHeader value.\nSemVer version of extension.\nThe version is a property of the extension and maintained …\nWatched directory that is watched for file changes. If …\nDefines the local service zone where Envoy is running. …\nSpecifies a user-space address handled by :ref:…\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nLocal async data source.\nRemote async data source.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEnvironment variable data source.\nLocal filesystem data source.\nBytes inlined in the configuration.\nString inlined in the configuration.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nSpecifies the :ref:…\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nThis action will add the header if it doesn’t already …\nIf the header already exists, this action will result in:\nDescribes the supported actions types for header append …\nThis action will overwrite the specified value by …\nThis action will overwrite the specified value by …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>HeaderAppendAction</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>HeaderAppendAction</code>.\nA cluster is created in the Envoy “cluster_manager” …\nSpecify how <code>uri</code> is to be fetched. Today, this requires an …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nThis action will add the key/value pair if it doesn’t …\nIf the key already exists, this action will result in the …\nDescribes the supported actions types for key/value pair …\nThis action will overwrite the specified value by …\nThis action will overwrite the specified value by …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>KeyValueAppendAction</code>, or <code>None</code> if <code>value</code>…\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>KeyValueAppendAction</code>.\nStructured version of the entity requesting config.\nFree-form string that identifies the version of the entity …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nSee :ref:…\nSee :ref:…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>RetryHostPredicate</code>.\nNested message and enum types in <code>RetryPriority</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nThis is only valid if :ref:…\nString value of the enum field names used in the ProtoBuf …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Protocol</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Protocol</code>.\nDecodes an instance of the message from a buffer, and …\nOtherwise it’s a byte buffer.\nBecause many sockopts take an int value.\nThe <code>socket type &lt;&lt;https://linux.die.net/man/2/socket&gt;</code>_&gt; to …\nSocket options are applied after binding the socket to a …\nSocket options are applied after calling listen()\nSocket options are applied after socket creation but …\nString value of the enum field names used in the ProtoBuf …\nApply the socket option to the datagram socket type.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>SocketState</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>SocketState</code>.\nDecodes an instance of the message from a buffer, and …\nNested message and enum types in <code>SocketType</code>.\nApply the socket option to the stream socket type.\nThe datagram socket type.\nThe stream socket type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nImplementation specific configuration which depends on the …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\n[#next-free-field: 7]\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>ProcessingMode</code>.\nReturns the enum value of <code>request_body_mode</code>, or the …\nHow to handle the request body. Default is “NONE”.\nReturns the enum value of <code>request_header_mode</code>, or the …\nHow to handle the request header. Default is “SEND”.\nReturns the enum value of <code>request_trailer_mode</code>, or the …\nHow to handle the request trailers. Default is “SKIP”.\nReturns the enum value of <code>response_body_mode</code>, or the …\nHow do handle the response body. Default is “NONE”.\nReturns the enum value of <code>response_header_mode</code>, or the …\nHow to handle the response header. Default is “SEND”.\nReturns the enum value of <code>response_trailer_mode</code>, or the …\nHow to handle the response trailers. Default is “SKIP”.\nSets <code>request_body_mode</code> to the provided enum value.\nSets <code>request_header_mode</code> to the provided enum value.\nSets <code>request_trailer_mode</code> to the provided enum value.\nSets <code>response_body_mode</code> to the provided enum value.\nSets <code>response_header_mode</code> to the provided enum value.\nSets <code>response_trailer_mode</code> to the provided enum value.\nControl how the request and response bodies are handled …\nBuffer the message body in memory and send the entire body …\nBuffer the message body in memory and send the entire body …\nThe default HeaderSendMode depends on which part of the …\n[#not-implemented-hide:] Envoy streams the body to the …\nControl how headers and trailers are handled\nDo not send the body at all. This is the default.\nSend the header or trailer.\nDo not send the header or trailer.\nStream the body to the server in pieces as they arrive at …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>HeaderSendMode</code>, or <code>None</code> if <code>value</code> is …\nConverts an <code>i32</code> to a <code>BodySendMode</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>HeaderSendMode</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>BodySendMode</code>.\nThis message specifies the body mutation the server sends …\nThis message is sent by the external server to Envoy after …\nThis message contains common fields between header and …\nThis message specifies a gRPC status for an …\nChange HTTP headers or trailers by appending, replacing, …\nThis message is sent by the external server to Envoy after …\nThis message is sent to the external server when the HTTP …\nThis message is sent to the external server when the HTTP …\nThis message is sent to the external server when the HTTP …\nThis message causes the filter to attempt to create a …\nThis represents the different types of messages that Envoy …\nFor every ProcessingRequest received by the server with …\n[#not-implemented-hide:] The body response message …\nThis message is sent by the external server to Envoy after …\nThe values of properties selected by the <code>request_attributes</code>\n[#not-implemented-hide:] This field is deprecated and not …\nThe contents of the body in the HTTP request/response. …\nThe message body to return with the response which is sent …\nThe body response chunk that will be passed to the …\nNested message and enum types in <code>BodyMutation</code>.\nReplace the body of the last message sent to the remote …\nClear the route cache for the current client request. This …\nNested message and enum types in <code>CommonResponse</code>.\nA string detailing why this local reply was sent, which …\nOptional metadata that will be emitted as dynamic metadata …\nIf <code>true</code>, then there is no message body associated with this\nIf <code>true</code>, this will be the last <code>HttpBody</code> message that will …\nThe server sets this flag to true if it has received a …\nGenerated client implementations.\nGenerated server implementations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf set, then include a gRPC status trailer.\nDetails the modifications (if any) to be made by Envoy to …\nInstructions on how to manipulate the headers. When …\nThe HTTP request headers. All header keys will be …\nApply changes to the default headers, which will include …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDynamic metadata associated with the request.\nOverride how parts of the HTTP request and response are …\nThe type of mutation for the body.\nSpecify whether the filter that sent this request is …\nWhen ext_proc server receives a request message, in case …\nNested message and enum types in <code>ProcessingRequest</code>.\nNested message and enum types in <code>ProcessingResponse</code>.\nRemove these HTTP headers. Attempts to remove system …\nEach request message will include one of the following …\nThe response type that is sent by the server.\nDetails the modifications (if any) to be made by Envoy to …\nDetails the modifications (if any) to be made by Envoy to …\nAdd or replace HTTP headers. Attempts to set the value of …\nSets <code>status</code> to the provided enum value.\nReturns the enum value of <code>status</code>, or the default if the …\nIf set, provide additional direction on how the Envoy …\nThe response code to return.\nThe actual gRPC status.\nThe header value is encoded in the :ref:…\n[#not-implemented-hide:] Add new trailers to the message. …\nThe entire body to replace. Should only be used when the …\nClear the corresponding body chunk. Should only be used …\nThe type of mutation for the body.\n[#not-implemented-hide:] Must be used when the …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nApply the mutation instructions in this message to the …\nApply the specified header mutation, replace the body with …\nThe status of the response.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ResponseStatus</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ResponseStatus</code>.\nA service that can access and modify HTTP requests and …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nThis begins the bidirectional stream that Envoy will use to\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nA service that can access and modify HTTP requests and …\nServer streaming response type for the Process method.\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nThis begins the bidirectional stream that Envoy will use to\nCompress responses with the given encoding, if the client …\nEach request message will include one of the following …\nA chunk of the HTTP request body. Unless <code>observability_mode</code>…\nInformation about the HTTP request headers, as well as …\nThe HTTP trailers for the request path. Unless …\nA chunk of the HTTP response body. Unless …\nInformation about the HTTP response headers, as well as …\nThe HTTP trailers for the response path. Unless …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nIf specified, attempt to create a locally generated …\nThe server must send back this message in response to a …\nThe server must send back this message in response to a …\nThe server must send back this message in response to a …\nThe response type that is sent by the server.\nThe server must send back this message in response to a …\nThe server must send back this message in response to a …\nThe server must send back this message in response to a …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nAccepted - <code>202</code> status code.\nAlreadyReported - <code>208</code> status code.\nBadGateway - <code>502</code> status code.\nBadRequest - <code>400</code> status code.\nConflict - <code>409</code> status code.\nContinue - <code>100</code> status code.\nCreated - <code>201</code> status code.\nEmpty - This code not part of the HTTP status code …\nExpectationFailed - <code>417</code> status code.\nFailedDependency - <code>424</code> status code.\nForbidden - <code>403</code> status code.\nFound - <code>302</code> status code.\nA fractional percentage is used in cases in which for …\nGatewayTimeout - <code>504</code> status code.\nGone - <code>410</code> status code.\nHTTP status.\nHTTPVersionNotSupported - <code>505</code> status code.\nIMUsed - <code>226</code> status code.\nInsufficientStorage - <code>507</code> status code.\nInternalServerError - <code>500</code> status code.\nLengthRequired - <code>411</code> status code.\nLocked - <code>423</code> status code.\nLoopDetected - <code>508</code> status code.\nMethodNotAllowed - <code>405</code> status code.\nMisdirectedRequest - <code>421</code> status code.\nMovedPermanently - <code>301</code> status code.\nMultiStatus - <code>207</code> status code.\nMultipleChoices - <code>300</code> status code.\nNetworkAuthenticationRequired - <code>511</code> status code.\nNoContent - <code>204</code> status code.\nNonAuthoritativeInformation - <code>203</code> status code.\nNotAcceptable - <code>406</code> status code.\nNotExtended - <code>510</code> status code.\nNotFound - <code>404</code> status code.\nNotImplemented - <code>501</code> status code.\nNotModified - <code>304</code> status code.\nOK - <code>200</code> status code.\nPartialContent - <code>206</code> status code.\nPayloadTooLarge - <code>413</code> status code.\nPaymentRequired - <code>402</code> status code.\nIdentifies a percentage, in the range [0.0, 100.0].\nPermanentRedirect - <code>308</code> status code.\nPreconditionFailed - <code>412</code> status code.\nPreconditionRequired - <code>428</code> status code.\nProxyAuthenticationRequired - <code>407</code> status code.\nRangeNotSatisfiable - <code>416</code> status code.\nRequestHeaderFieldsTooLarge - <code>431</code> status code.\nRequestTimeout - <code>408</code> status code.\nResetContent - <code>205</code> status code.\nSeeOther - <code>303</code> status code.\nEnvoy uses SemVer (https://semver.org/). Major/minor …\nServiceUnavailable - <code>503</code> status code.\nHTTP response codes supported in Envoy. For more details: …\nTemporaryRedirect - <code>307</code> status code.\nTooManyRequests - <code>429</code> status code.\nUnauthorized - <code>401</code> status code.\nUnprocessableEntity - <code>422</code> status code.\nUnsupportedMediaType - <code>415</code> status code.\nUpgradeRequired - <code>426</code> status code.\nURITooLong - <code>414</code> status code.\nUseProxy - <code>305</code> status code.\nVariantAlsoNegotiates - <code>506</code> status code.\nString value of the enum field names used in the ProtoBuf …\nReturns the enum value of <code>code</code>, or the default if the …\nSupplies HTTP response code.\nReturns the enum value of <code>denominator</code>, or the default if …\nSpecifies the denominator. If the denominator specified is …\nNested message and enum types in <code>FractionalPercent</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>StatusCode</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>StatusCode</code>.\nSpecifies the numerator. Defaults to 0.\nSets <code>code</code> to the provided enum value.\nSets <code>denominator</code> to the provided enum value.\nFraction percentages support several fixed denominator …\n<strong>Example</strong>: 1/100 = 1%.\n1,000,000.\n10,000.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>DenominatorType</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>DenominatorType</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nServer for hosting Envoy external processors.\nConfiguration for the <code>CalloutServer</code>.\nAddress for the secure gRPC server (format: “host:port”…\nPath to the TLS certificate file\nCreates a default configuration for the <code>CalloutServer</code>.\nWhether to enable the plaintext gRPC server\nReturns the argument unchanged.\nReturns the argument unchanged.\nAddress for the health check HTTP server (format: “…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPath to the TLS key file\nCreates a new <code>CalloutServer</code> with the specified …\nOptional address for the plaintext gRPC server (format: “…\nSpawns the secure gRPC server in a new task.\nSpawns the health check HTTP server in a new task.\nSpawns the plaintext gRPC server in a new task.\nCreates a new <code>CalloutServer</code> with default configuration.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMutations Utility Module\nCreates a processing response that clears the HTTP body.\nCreates a processing response that replaces the HTTP body …\nCreates a processing response that adds and/or removes …\nCreates an immediate response with custom status code, …\nCreates a redirect response with the specified status code …")